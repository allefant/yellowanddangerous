/* This file was generated by scramble.py. */
#line 1 "src/game.py"
#ifndef _GAME_
#define _GAME_
typedef struct Game Game;
#line 1
#include "common.h"
#include "block.h"
#line 2
#include "isometric.h"
#line 2
#include "render.h"
#line 2
#include "player.h"
#line 2
#include "cube.h"
#line 2
#include "allefant.h"
#include "save.h"
#include "intro.h"
#include "input.h"
#include "menu.h"
#include "overview.h"
#include "editor.h"
#include "record.h"
#include "event.h"
#line 14
struct Game {
    int level;
    Blocks * blocks;
    float waypoints [10] [3];
    int waypoints_count;
    Viewport * viewport;
    char const * state;
    int ticks;
    int state_tick;
    Player * player;
    Allefant * player2;
#line 26
    Block * lever;
#line 28
    double start_time;
#line 30
    char hint [1024];
    char title [1024];
    bool pristine;
#line 34
    int gox, goz;
    int ex, ez;
#line 37
    int swap_level;
#line 39
    int sequence;
    int sequence_ticks;
#line 42
    bool flower [8];
    bool test_tube [8];
    bool key;
#line 46
    int deaths;
#line 48
    Menu * menu;
    bool menu_on;
#line 51
    Overview * overview;
    Record * record;
};
extern Game * game;
extern int game_starting_level;
#line 57
void game_setup(float w, float h);
#line 75
void game_del(Game * self);
#line 86
int game_neighboring_level(int level, int gox, int goz);
#line 96
void game_level_number_to_xz(int level, int * x, int * z);
#line 100
void game_level_done(Game * self, int gox, int goz);
#line 115
void game_recalc(void);
#line 119
void game_key(Game * self, int k);
#line 122
void game_tick(Game * self);
#endif
/* This file was generated by scramble.py. */
